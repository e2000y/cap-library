// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cap.proto
// Protobuf Java Version: 4.28.1

package com.google.publicalerts.cap;

public interface ResourceOrBuilder extends
    // @@protoc_insertion_point(interface_extends:publicalerts.cap.Resource)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return Whether the resourceDesc field is set.
   */
  boolean hasResourceDesc();
  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return The resourceDesc.
   */
  java.lang.String getResourceDesc();
  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return The bytes for resourceDesc.
   */
  com.google.protobuf.ByteString
      getResourceDescBytes();

  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return Whether the mimeType field is set.
   */
  boolean hasMimeType();
  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return The mimeType.
   */
  java.lang.String getMimeType();
  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return The bytes for mimeType.
   */
  com.google.protobuf.ByteString
      getMimeTypeBytes();

  /**
   * <pre>
   * Approximate size of the resource file in bytes.
   * </pre>
   *
   * <code>optional int64 size = 3;</code>
   * @return Whether the size field is set.
   */
  boolean hasSize();
  /**
   * <pre>
   * Approximate size of the resource file in bytes.
   * </pre>
   *
   * <code>optional int64 size = 3;</code>
   * @return The size.
   */
  long getSize();

  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return Whether the uri field is set.
   */
  boolean hasUri();
  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return The uri.
   */
  java.lang.String getUri();
  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return The bytes for uri.
   */
  com.google.protobuf.ByteString
      getUriBytes();

  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return Whether the derefUri field is set.
   */
  boolean hasDerefUri();
  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return The derefUri.
   */
  java.lang.String getDerefUri();
  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return The bytes for derefUri.
   */
  com.google.protobuf.ByteString
      getDerefUriBytes();

  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return Whether the digest field is set.
   */
  boolean hasDigest();
  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return The digest.
   */
  java.lang.String getDigest();
  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return The bytes for digest.
   */
  com.google.protobuf.ByteString
      getDigestBytes();
}
