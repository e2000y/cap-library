// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cap.proto
// Protobuf Java Version: 4.28.1

package com.google.publicalerts.cap;

/**
 * <pre>
 * The container for all component parts of the resource sub-element of
 * the info sub-element of the alert message.
 * </pre>
 *
 * Protobuf type {@code publicalerts.cap.Resource}
 */
public final class Resource extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:publicalerts.cap.Resource)
    ResourceOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 1,
      /* suffix= */ "",
      Resource.class.getName());
  }
  // Use Resource.newBuilder() to construct.
  private Resource(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private Resource() {
    resourceDesc_ = "";
    mimeType_ = "";
    uri_ = "";
    derefUri_ = "";
    digest_ = "";
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.publicalerts.cap.Cap.internal_static_publicalerts_cap_Resource_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.publicalerts.cap.Cap.internal_static_publicalerts_cap_Resource_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.publicalerts.cap.Resource.class, com.google.publicalerts.cap.Resource.Builder.class);
  }

  private int bitField0_;
  public static final int RESOURCE_DESC_FIELD_NUMBER = 1;
  @SuppressWarnings("serial")
  private volatile java.lang.Object resourceDesc_ = "";
  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return Whether the resourceDesc field is set.
   */
  @java.lang.Override
  public boolean hasResourceDesc() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return The resourceDesc.
   */
  @java.lang.Override
  public java.lang.String getResourceDesc() {
    java.lang.Object ref = resourceDesc_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        resourceDesc_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The human-readable text describing the content and kind, such as
   * "map" or "photo", of the resource file
   * </pre>
   *
   * <code>required string resource_desc = 1;</code>
   * @return The bytes for resourceDesc.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getResourceDescBytes() {
    java.lang.Object ref = resourceDesc_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      resourceDesc_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int MIME_TYPE_FIELD_NUMBER = 2;
  @SuppressWarnings("serial")
  private volatile java.lang.Object mimeType_ = "";
  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return Whether the mimeType field is set.
   */
  @java.lang.Override
  public boolean hasMimeType() {
    return ((bitField0_ & 0x00000002) != 0);
  }
  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return The mimeType.
   */
  @java.lang.Override
  public java.lang.String getMimeType() {
    java.lang.Object ref = mimeType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        mimeType_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * MIME content type and sub-type as described in [RFC 2046].
   * (As of this document, the current IANA registered MIME types are
   * listed at http://www.iana.org/assignments/media-types/)
   * Required as of CAP 1.2
   * </pre>
   *
   * <code>optional string mime_type = 2;</code>
   * @return The bytes for mimeType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getMimeTypeBytes() {
    java.lang.Object ref = mimeType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      mimeType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SIZE_FIELD_NUMBER = 3;
  private long size_ = 0L;
  /**
   * <pre>
   * Approximate size of the resource file in bytes.
   * </pre>
   *
   * <code>optional int64 size = 3;</code>
   * @return Whether the size field is set.
   */
  @java.lang.Override
  public boolean hasSize() {
    return ((bitField0_ & 0x00000004) != 0);
  }
  /**
   * <pre>
   * Approximate size of the resource file in bytes.
   * </pre>
   *
   * <code>optional int64 size = 3;</code>
   * @return The size.
   */
  @java.lang.Override
  public long getSize() {
    return size_;
  }

  public static final int URI_FIELD_NUMBER = 4;
  @SuppressWarnings("serial")
  private volatile java.lang.Object uri_ = "";
  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return Whether the uri field is set.
   */
  @java.lang.Override
  public boolean hasUri() {
    return ((bitField0_ & 0x00000008) != 0);
  }
  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return The uri.
   */
  @java.lang.Override
  public java.lang.String getUri() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        uri_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * A full absolute URI, typically a Uniform Resource Locator that can
   * be used to retrieve the resource over the Internet
   * OR
   * a relative URI to name the content of a &lt;derefUri&gt; element if one is
   * present in this resource block.
   * </pre>
   *
   * <code>optional string uri = 4;</code>
   * @return The bytes for uri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getUriBytes() {
    java.lang.Object ref = uri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      uri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DEREF_URI_FIELD_NUMBER = 5;
  @SuppressWarnings("serial")
  private volatile java.lang.Object derefUri_ = "";
  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return Whether the derefUri field is set.
   */
  @java.lang.Override
  public boolean hasDerefUri() {
    return ((bitField0_ & 0x00000010) != 0);
  }
  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return The derefUri.
   */
  @java.lang.Override
  public java.lang.String getDerefUri() {
    java.lang.Object ref = derefUri_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        derefUri_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The base-64 encoded data content of the resource file.
   * MAY be used either with or instead of the &lt;uri&gt; element in messages
   * transmitted over one-way (e.g., broadcast) data links where retrieval
   * of a resource via a URI is not feasible.
   * Clients intended for use with one-way data links MUST support this
   * element.
   * This element MUST NOT be used unless the sender is certain that all
   * direct clients are capable of processing it.
   * If messages including this element are forwarded onto a two-way
   * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
   * extract the file contents and provide a &lt;uri&gt; link to a
   * retrievable version of the file.
   * Providers of one-way data links MAY enforce additional restrictions
   * on the use of this element, including message-size limits and
   * restrictions regarding file types.
   * Added in CAP 1.1
   * </pre>
   *
   * <code>optional string deref_uri = 5;</code>
   * @return The bytes for derefUri.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDerefUriBytes() {
    java.lang.Object ref = derefUri_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      derefUri_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIGEST_FIELD_NUMBER = 6;
  @SuppressWarnings("serial")
  private volatile java.lang.Object digest_ = "";
  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return Whether the digest field is set.
   */
  @java.lang.Override
  public boolean hasDigest() {
    return ((bitField0_ & 0x00000020) != 0);
  }
  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return The digest.
   */
  @java.lang.Override
  public java.lang.String getDigest() {
    java.lang.Object ref = digest_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        digest_ = s;
      }
      return s;
    }
  }
  /**
   * <pre>
   * The code representing the digital digest (?hash?) computed from the
   * resource from the resource file. Calculated using the Secure Hash
   * Algorithm (SHA-1) per [FIPS 180-2]
   * </pre>
   *
   * <code>optional string digest = 6;</code>
   * @return The bytes for digest.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDigestBytes() {
    java.lang.Object ref = digest_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      digest_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasResourceDesc()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, resourceDesc_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 2, mimeType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      output.writeInt64(3, size_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 4, uri_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, derefUri_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      com.google.protobuf.GeneratedMessage.writeString(output, 6, digest_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, resourceDesc_);
    }
    if (((bitField0_ & 0x00000002) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(2, mimeType_);
    }
    if (((bitField0_ & 0x00000004) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(3, size_);
    }
    if (((bitField0_ & 0x00000008) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(4, uri_);
    }
    if (((bitField0_ & 0x00000010) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, derefUri_);
    }
    if (((bitField0_ & 0x00000020) != 0)) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(6, digest_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.publicalerts.cap.Resource)) {
      return super.equals(obj);
    }
    com.google.publicalerts.cap.Resource other = (com.google.publicalerts.cap.Resource) obj;

    if (hasResourceDesc() != other.hasResourceDesc()) return false;
    if (hasResourceDesc()) {
      if (!getResourceDesc()
          .equals(other.getResourceDesc())) return false;
    }
    if (hasMimeType() != other.hasMimeType()) return false;
    if (hasMimeType()) {
      if (!getMimeType()
          .equals(other.getMimeType())) return false;
    }
    if (hasSize() != other.hasSize()) return false;
    if (hasSize()) {
      if (getSize()
          != other.getSize()) return false;
    }
    if (hasUri() != other.hasUri()) return false;
    if (hasUri()) {
      if (!getUri()
          .equals(other.getUri())) return false;
    }
    if (hasDerefUri() != other.hasDerefUri()) return false;
    if (hasDerefUri()) {
      if (!getDerefUri()
          .equals(other.getDerefUri())) return false;
    }
    if (hasDigest() != other.hasDigest()) return false;
    if (hasDigest()) {
      if (!getDigest()
          .equals(other.getDigest())) return false;
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasResourceDesc()) {
      hash = (37 * hash) + RESOURCE_DESC_FIELD_NUMBER;
      hash = (53 * hash) + getResourceDesc().hashCode();
    }
    if (hasMimeType()) {
      hash = (37 * hash) + MIME_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMimeType().hashCode();
    }
    if (hasSize()) {
      hash = (37 * hash) + SIZE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSize());
    }
    if (hasUri()) {
      hash = (37 * hash) + URI_FIELD_NUMBER;
      hash = (53 * hash) + getUri().hashCode();
    }
    if (hasDerefUri()) {
      hash = (37 * hash) + DEREF_URI_FIELD_NUMBER;
      hash = (53 * hash) + getDerefUri().hashCode();
    }
    if (hasDigest()) {
      hash = (37 * hash) + DIGEST_FIELD_NUMBER;
      hash = (53 * hash) + getDigest().hashCode();
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.publicalerts.cap.Resource parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static com.google.publicalerts.cap.Resource parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.publicalerts.cap.Resource parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static com.google.publicalerts.cap.Resource parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.publicalerts.cap.Resource prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * The container for all component parts of the resource sub-element of
   * the info sub-element of the alert message.
   * </pre>
   *
   * Protobuf type {@code publicalerts.cap.Resource}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:publicalerts.cap.Resource)
      com.google.publicalerts.cap.ResourceOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.publicalerts.cap.Cap.internal_static_publicalerts_cap_Resource_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.publicalerts.cap.Cap.internal_static_publicalerts_cap_Resource_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.publicalerts.cap.Resource.class, com.google.publicalerts.cap.Resource.Builder.class);
    }

    // Construct using com.google.publicalerts.cap.Resource.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      resourceDesc_ = "";
      mimeType_ = "";
      size_ = 0L;
      uri_ = "";
      derefUri_ = "";
      digest_ = "";
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.publicalerts.cap.Cap.internal_static_publicalerts_cap_Resource_descriptor;
    }

    @java.lang.Override
    public com.google.publicalerts.cap.Resource getDefaultInstanceForType() {
      return com.google.publicalerts.cap.Resource.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.publicalerts.cap.Resource build() {
      com.google.publicalerts.cap.Resource result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.publicalerts.cap.Resource buildPartial() {
      com.google.publicalerts.cap.Resource result = new com.google.publicalerts.cap.Resource(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(com.google.publicalerts.cap.Resource result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.resourceDesc_ = resourceDesc_;
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.mimeType_ = mimeType_;
        to_bitField0_ |= 0x00000002;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.size_ = size_;
        to_bitField0_ |= 0x00000004;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.uri_ = uri_;
        to_bitField0_ |= 0x00000008;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.derefUri_ = derefUri_;
        to_bitField0_ |= 0x00000010;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.digest_ = digest_;
        to_bitField0_ |= 0x00000020;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.publicalerts.cap.Resource) {
        return mergeFrom((com.google.publicalerts.cap.Resource)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.publicalerts.cap.Resource other) {
      if (other == com.google.publicalerts.cap.Resource.getDefaultInstance()) return this;
      if (other.hasResourceDesc()) {
        resourceDesc_ = other.resourceDesc_;
        bitField0_ |= 0x00000001;
        onChanged();
      }
      if (other.hasMimeType()) {
        mimeType_ = other.mimeType_;
        bitField0_ |= 0x00000002;
        onChanged();
      }
      if (other.hasSize()) {
        setSize(other.getSize());
      }
      if (other.hasUri()) {
        uri_ = other.uri_;
        bitField0_ |= 0x00000008;
        onChanged();
      }
      if (other.hasDerefUri()) {
        derefUri_ = other.derefUri_;
        bitField0_ |= 0x00000010;
        onChanged();
      }
      if (other.hasDigest()) {
        digest_ = other.digest_;
        bitField0_ |= 0x00000020;
        onChanged();
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      if (!hasResourceDesc()) {
        return false;
      }
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              resourceDesc_ = input.readBytes();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              mimeType_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            case 24: {
              size_ = input.readInt64();
              bitField0_ |= 0x00000004;
              break;
            } // case 24
            case 34: {
              uri_ = input.readBytes();
              bitField0_ |= 0x00000008;
              break;
            } // case 34
            case 42: {
              derefUri_ = input.readBytes();
              bitField0_ |= 0x00000010;
              break;
            } // case 42
            case 50: {
              digest_ = input.readBytes();
              bitField0_ |= 0x00000020;
              break;
            } // case 50
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private java.lang.Object resourceDesc_ = "";
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @return Whether the resourceDesc field is set.
     */
    public boolean hasResourceDesc() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @return The resourceDesc.
     */
    public java.lang.String getResourceDesc() {
      java.lang.Object ref = resourceDesc_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          resourceDesc_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @return The bytes for resourceDesc.
     */
    public com.google.protobuf.ByteString
        getResourceDescBytes() {
      java.lang.Object ref = resourceDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        resourceDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @param value The resourceDesc to set.
     * @return This builder for chaining.
     */
    public Builder setResourceDesc(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      resourceDesc_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearResourceDesc() {
      resourceDesc_ = getDefaultInstance().getResourceDesc();
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The human-readable text describing the content and kind, such as
     * "map" or "photo", of the resource file
     * </pre>
     *
     * <code>required string resource_desc = 1;</code>
     * @param value The bytes for resourceDesc to set.
     * @return This builder for chaining.
     */
    public Builder setResourceDescBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      resourceDesc_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }

    private java.lang.Object mimeType_ = "";
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @return Whether the mimeType field is set.
     */
    public boolean hasMimeType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @return The mimeType.
     */
    public java.lang.String getMimeType() {
      java.lang.Object ref = mimeType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mimeType_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @return The bytes for mimeType.
     */
    public com.google.protobuf.ByteString
        getMimeTypeBytes() {
      java.lang.Object ref = mimeType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mimeType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @param value The mimeType to set.
     * @return This builder for chaining.
     */
    public Builder setMimeType(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      mimeType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearMimeType() {
      mimeType_ = getDefaultInstance().getMimeType();
      bitField0_ = (bitField0_ & ~0x00000002);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * MIME content type and sub-type as described in [RFC 2046].
     * (As of this document, the current IANA registered MIME types are
     * listed at http://www.iana.org/assignments/media-types/)
     * Required as of CAP 1.2
     * </pre>
     *
     * <code>optional string mime_type = 2;</code>
     * @param value The bytes for mimeType to set.
     * @return This builder for chaining.
     */
    public Builder setMimeTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      mimeType_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }

    private long size_ ;
    /**
     * <pre>
     * Approximate size of the resource file in bytes.
     * </pre>
     *
     * <code>optional int64 size = 3;</code>
     * @return Whether the size field is set.
     */
    @java.lang.Override
    public boolean hasSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Approximate size of the resource file in bytes.
     * </pre>
     *
     * <code>optional int64 size = 3;</code>
     * @return The size.
     */
    @java.lang.Override
    public long getSize() {
      return size_;
    }
    /**
     * <pre>
     * Approximate size of the resource file in bytes.
     * </pre>
     *
     * <code>optional int64 size = 3;</code>
     * @param value The size to set.
     * @return This builder for chaining.
     */
    public Builder setSize(long value) {

      size_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Approximate size of the resource file in bytes.
     * </pre>
     *
     * <code>optional int64 size = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearSize() {
      bitField0_ = (bitField0_ & ~0x00000004);
      size_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object uri_ = "";
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @return Whether the uri field is set.
     */
    public boolean hasUri() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @return The uri.
     */
    public java.lang.String getUri() {
      java.lang.Object ref = uri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          uri_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @return The bytes for uri.
     */
    public com.google.protobuf.ByteString
        getUriBytes() {
      java.lang.Object ref = uri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @param value The uri to set.
     * @return This builder for chaining.
     */
    public Builder setUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      uri_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearUri() {
      uri_ = getDefaultInstance().getUri();
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A full absolute URI, typically a Uniform Resource Locator that can
     * be used to retrieve the resource over the Internet
     * OR
     * a relative URI to name the content of a &lt;derefUri&gt; element if one is
     * present in this resource block.
     * </pre>
     *
     * <code>optional string uri = 4;</code>
     * @param value The bytes for uri to set.
     * @return This builder for chaining.
     */
    public Builder setUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      uri_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }

    private java.lang.Object derefUri_ = "";
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @return Whether the derefUri field is set.
     */
    public boolean hasDerefUri() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @return The derefUri.
     */
    public java.lang.String getDerefUri() {
      java.lang.Object ref = derefUri_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          derefUri_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @return The bytes for derefUri.
     */
    public com.google.protobuf.ByteString
        getDerefUriBytes() {
      java.lang.Object ref = derefUri_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        derefUri_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @param value The derefUri to set.
     * @return This builder for chaining.
     */
    public Builder setDerefUri(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      derefUri_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearDerefUri() {
      derefUri_ = getDefaultInstance().getDerefUri();
      bitField0_ = (bitField0_ & ~0x00000010);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The base-64 encoded data content of the resource file.
     * MAY be used either with or instead of the &lt;uri&gt; element in messages
     * transmitted over one-way (e.g., broadcast) data links where retrieval
     * of a resource via a URI is not feasible.
     * Clients intended for use with one-way data links MUST support this
     * element.
     * This element MUST NOT be used unless the sender is certain that all
     * direct clients are capable of processing it.
     * If messages including this element are forwarded onto a two-way
     * network, the forwarder MUST strip the &lt;derefUri&gt; element and SHOULD
     * extract the file contents and provide a &lt;uri&gt; link to a
     * retrievable version of the file.
     * Providers of one-way data links MAY enforce additional restrictions
     * on the use of this element, including message-size limits and
     * restrictions regarding file types.
     * Added in CAP 1.1
     * </pre>
     *
     * <code>optional string deref_uri = 5;</code>
     * @param value The bytes for derefUri to set.
     * @return This builder for chaining.
     */
    public Builder setDerefUriBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      derefUri_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }

    private java.lang.Object digest_ = "";
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @return Whether the digest field is set.
     */
    public boolean hasDigest() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @return The digest.
     */
    public java.lang.String getDigest() {
      java.lang.Object ref = digest_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          digest_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @return The bytes for digest.
     */
    public com.google.protobuf.ByteString
        getDigestBytes() {
      java.lang.Object ref = digest_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        digest_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @param value The digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigest(
        java.lang.String value) {
      if (value == null) { throw new NullPointerException(); }
      digest_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearDigest() {
      digest_ = getDefaultInstance().getDigest();
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The code representing the digital digest (?hash?) computed from the
     * resource from the resource file. Calculated using the Secure Hash
     * Algorithm (SHA-1) per [FIPS 180-2]
     * </pre>
     *
     * <code>optional string digest = 6;</code>
     * @param value The bytes for digest to set.
     * @return This builder for chaining.
     */
    public Builder setDigestBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      digest_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:publicalerts.cap.Resource)
  }

  // @@protoc_insertion_point(class_scope:publicalerts.cap.Resource)
  private static final com.google.publicalerts.cap.Resource DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.publicalerts.cap.Resource();
  }

  public static com.google.publicalerts.cap.Resource getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Resource>
      PARSER = new com.google.protobuf.AbstractParser<Resource>() {
    @java.lang.Override
    public Resource parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Resource> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Resource> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.publicalerts.cap.Resource getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

